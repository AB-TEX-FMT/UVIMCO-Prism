@model ComponentMetaData
@{
    ViewBag.Title = "Reports page";
    //var user = await UserManager.GetUserAsync(User);
}

<div class="container" style="margin-left: 0px; margin-right: 0px; margin-top: 0px; padding-left:0px; padding-right: 0px; width: 100%">
    <div class="col-md-12">
        <div class="row view-menubar-reverse">
            <div class="col-md-4">
                @*<button type="button" class="reloadData" value="@Model.GUID">Reload Data</button>
                <input type='button' onclick='showMainTable(@Model.GUID)' value='Load Component Data'>*@
            </div>
            <div class="col-md-4">
                <h3 class="text-center">@(Model.ComponentTitle == null ? "" : Model.ComponentTitle)</h3>
            </div>
        </div>
        <div class="row">
            <div class="col-2"></div>
            <div class="col-8 text-center">
                @(Model.ComponentHeader is null ? "" : Model.ComponentHeader)
            </div>
            <div class="col-2"></div>
        </div>
        <div class="row text-center" id="native">
            <div class="col-12">
                <table id="tableMain" class="table table-striped table-bordered display compact nowrap" style="width:100%" cellspacing="0"></table>
            </div>
        </div>
        <div class="row">
            <div class="col-2"></div>
            <div class="col-8 text-center">
                @(Model.ComponentFootNote is null ? "" : Model.ComponentFootNote)
            </div>
            <div class="col-2"></div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        showMainTable("@Model.GUID");
    });

    $('button.reloadData').click(function () {
        var valueData = {
            'id_mhs': this.value // $(this).val() also works but it's unnecessary to invoke another jQuery call
        };
        showMainTable(valueData);
    });

    //#################
    //Display Table
    function showMainTable(GUID) {
        alert(GUID);
        $.ajax({
            "url": "/ReportsDataView/" + GUID + "/TableComponentJSON",
            "dataType": "json",
            "success": function (response) {
                alert(response.columns);
                //alert(response.data);
                var dataObj;
                try {
                    dataObj = JSON.parse(response.data); // Parse a string into JSON
                } catch (ex) {
                    console.error(ex);
                }
                //alert(data + "/" + data1);
                //alert(jsonObj + "/" + jsonObj1);

                //notifyStatus(response);
                //var [builtColumns] = constructDetailColumn('details-control');
                //builtColumns.push({
                //    "title": 'Add New',
                //    "className": 'add-new-control',
                //    "orderable": true,
                //    "searchable": false,
                //    "data": null,
                //    "defaultContent": '',
                //    "render": function (data, type, row) {
                //        return type === !row.ApproverHasPayrollOverride ? ``
                //            :
                //            `<button class="btn btn-primary has-spinner btn-block" data-toggle="tooltip" data-placement="right" title="Add New Pay Item for ` + row.FirstName + ` ` + row.LastName + `">
                //                    <span class='spinner'><i class='fa fa-refresh fa-spin'></i></span><i class="fa fa-plus"></i>
                //                </button>` ;
                //    },
                //    width: "50px"
                //});
                var [builtColumns] = constructTableColumns(response.columns, builtColumns);
                var tableMain = $('#tableMain').DataTable({
                    //"proccessing": true,
                    //"serverSide": true,
                    dom: '<Blfp<t>Blfip>',
                    //retrieve: true,
                    //select: "single",
                    language: {
                        "search": "",
                        "searchPlaceholder": "Search..."
                    },
                    columns: builtColumns,
                    data: dataObj,
                    colReorder: true,
                    order: [[1, 'asc']],
                    fixedHeader: true,
                });

                // Add event listener for opening and closing details
                //$('#tableMain tbody').on('click', 'td.details-control', function () {
                //    var tr = $(this).closest('tr');
                //    var tdi = tr.find("i.fa");
                //    var row = tableEmployee.row(tr);

                //    if (row.child.isShown()) {
                //        // This row is already open - close it
                //        row.child.hide();
                //        tr.removeClass('shown');
                //        tdi.first().removeClass('fa-minus-circle');
                //        tdi.first().addClass('fa-plus-circle');
                //    }
                //    else {
                //        // Open this row
                //        showEmployeeDetailPayItmes(row.data(), row);
                //        tr.addClass('shown');
                //        tdi.first().removeClass('fa-plus-circle');
                //        tdi.first().addClass('fa-minus-circle');
                //    }
                //});

                $('#tableMain').on("user-select", function (e, dt, type, cell, originalEvent) {
                    if ($(cell.node()).hasClass("details-control")) {
                        e.preventDefault();
                    }
                });
            }
        });
    }
</script>